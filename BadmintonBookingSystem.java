
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author USER
 */
import javax.swing.*;
public class BadmintonBookingSystem extends javax.swing.JFrame {
    private UserAuth auth;// Handles user authentication and tracks the current login user
    private BookingList bookingList; // Manages the list of all court bookings including file I/O operations
    /**
     * Creates new form BadmintonBookingSystem
     */
    public BadmintonBookingSystem(UserAuth auth, BookingList bookingList) {
        this.auth = auth; // Store the passed in UserAuth object used to access the current user information
        this.bookingList = bookingList; // Store the passed in BookingList object for accessing and managing court bookings
        bookingList.readFile(); // Read bookings from file
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        bookingCourtBtn = new javax.swing.JButton();
        displayBookingRecordBtn = new javax.swing.JButton();
        checkCourtBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Badminton Booking System");

        jLabel1.setFont(new java.awt.Font("STKaiti", 1, 24)); // NOI18N
        jLabel1.setText("Welcome To Badminton Booking System");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        bookingCourtBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        bookingCourtBtn.setText("Booking Court");
        bookingCourtBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingCourtBtnActionPerformed(evt);
            }
        });

        displayBookingRecordBtn.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        displayBookingRecordBtn.setText("Display Booking Record");
        displayBookingRecordBtn.setToolTipText("");
        displayBookingRecordBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        displayBookingRecordBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayBookingRecordBtnActionPerformed(evt);
            }
        });

        checkCourtBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        checkCourtBtn.setText("Check Available Court");
        checkCourtBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkCourtBtnActionPerformed(evt);
            }
        });

        exitBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        searchBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        searchBtn.setText("Search Booking");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(displayBookingRecordBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                    .addComponent(bookingCourtBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(checkCourtBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(42, 42, 42))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookingCourtBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkCourtBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(displayBookingRecordBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE))
                .addGap(35, 35, 35)
                .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jLabel1)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    // Opens the BookingCourt form
    private void bookingCourtBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingCourtBtnActionPerformed
        dispose();
        new BookingCourt(auth, bookingList).setVisible(true);
    }//GEN-LAST:event_bookingCourtBtnActionPerformed
    
    // Opens the CheckCourt form
    private void checkCourtBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkCourtBtnActionPerformed
        dispose();
        new CheckCourt(auth, bookingList).setVisible(true);
    }//GEN-LAST:event_checkCourtBtnActionPerformed
    
    // Opens DisplayAllBookings only if user has at least one booking
    private void displayBookingRecordBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayBookingRecordBtnActionPerformed
        String currentUser = auth.getCurrentUser().getUsername();
        boolean hasBook = false;
        // Check if current user has any booking
        for (Booking b : bookingList.getList()) {
            if (b.getName().equals(currentUser)) {
                hasBook = true;
                break;
            }
        }
        // Inform the user if no bookings are found
        if (!hasBook) {
            JOptionPane.showMessageDialog(this, "You have no bookings yet.", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else {
            dispose();
            new DisplayAllBookings(auth, bookingList).setVisible(true);

        }
    }//GEN-LAST:event_displayBookingRecordBtnActionPerformed

    // Exits the system and go back to login page
    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this, "Are you want to Exit?", 
        "Confirn Page", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION){
            new LoginPage(auth).setVisible(true); // return to login page
            dispose();
        }
    }//GEN-LAST:event_exitBtnActionPerformed
    
    // Opens SearchBooking form only if user has at least one booking
    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        String currentUser = auth.getCurrentUser().getUsername();
        boolean hasBook = false;
        for(Booking b : bookingList.getList()){
            if(b.getName().equals(currentUser)){
                hasBook = true;
                dispose();
                new SearchBooking(auth, bookingList).setVisible(true);
                break;
            }
        }
        if(!hasBook){
            JOptionPane.showMessageDialog(this, "You have no bookings yet.", "Info", JOptionPane.INFORMATION_MESSAGE);
        }  
    }//GEN-LAST:event_searchBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BadmintonBookingSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BadmintonBookingSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BadmintonBookingSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BadmintonBookingSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UserAuth auth = new UserAuth(); // initialize here
                BookingList bookingList = new BookingList();
                bookingList.readFile();
                new LoginPage(auth).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bookingCourtBtn;
    private javax.swing.JButton checkCourtBtn;
    private javax.swing.JButton displayBookingRecordBtn;
    private javax.swing.JButton exitBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton searchBtn;
    // End of variables declaration//GEN-END:variables
}
